local Library = {}

function Library:CreateUI(title)
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "ModernUILib"
    ScreenGui.ResetOnSpawn = false

    -- ✅ FIX 1: safer parenting (works in LocalScript + exploit env)
    local success, playerGui = pcall(function()
        return game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")
    end)
    if success and playerGui then
        ScreenGui.Parent = playerGui
    else
        ScreenGui.Parent = game:GetService("CoreGui")
    end

    local Frame = Instance.new("Frame")
    Frame.Size = UDim2.new(0, 250, 0, 300)
    Frame.Position = UDim2.new(0.5, -125, 0.5, -150)
    Frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    Frame.BorderSizePixel = 0
    Frame.Active = true
    Frame.Draggable = true
    Frame.Parent = ScreenGui

    local Title = Instance.new("TextLabel")
    Title.Size = UDim2.new(1, 0, 0, 40)
    Title.BackgroundTransparency = 1
    Title.Text = title or "Modern UI"
    Title.TextColor3 = Color3.fromRGB(255, 255, 255)
    Title.Font = Enum.Font.GothamBold
    Title.TextSize = 20
    Title.Parent = Frame

    local Container = Instance.new("Frame")
    Container.Position = UDim2.new(0, 0, 0, 40)
    Container.Size = UDim2.new(1, 0, 1, -40)
    Container.BackgroundTransparency = 1
    Container.Parent = Frame

    -- Elements
    function Library:AddButton(text, callback)
        local Button = Instance.new("TextButton")
        Button.Size = UDim2.new(1, -10, 0, 30)
        Button.Position = UDim2.new(0, 5, 0, #Container:GetChildren() * 35)
        Button.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        Button.TextColor3 = Color3.fromRGB(255, 255, 255)
        Button.Text = text
        Button.Font = Enum.Font.Gotham
        Button.TextSize = 16
        Button.Parent = Container
        Button.MouseButton1Click:Connect(function()
            if callback then pcall(callback) end
        end)
    end

    function Library:AddToggle(text, default, callback)
        local Toggle = Instance.new("TextButton")
        Toggle.Size = UDim2.new(1, -10, 0, 30)
        Toggle.Position = UDim2.new(0, 5, 0, #Container:GetChildren() * 35)
        Toggle.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        Toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
        Toggle.Text = text .. ": " .. tostring(default)
        Toggle.Font = Enum.Font.Gotham
        Toggle.TextSize = 16
        Toggle.Parent = Container
        local toggled = default
        Toggle.MouseButton1Click:Connect(function()
            toggled = not toggled
            Toggle.Text = text .. ": " .. tostring(toggled)
            if callback then pcall(callback, toggled) end
        end)
    end

    function Library:AddLabel(text)
        local Label = Instance.new("TextLabel")
        Label.Size = UDim2.new(1, -10, 0, 30)
        Label.Position = UDim2.new(0, 5, 0, #Container:GetChildren() * 35)
        Label.BackgroundTransparency = 1
        Label.TextColor3 = Color3.fromRGB(255, 255, 255)
        Label.Text = text
        Label.Font = Enum.Font.Gotham
        Label.TextSize = 16
        Label.Parent = Container
    end

    function Library:AddSlider(text, min, max, default, callback)
        local Holder = Instance.new("Frame")
        Holder.Size = UDim2.new(1, -10, 0, 40)
        Holder.Position = UDim2.new(0, 5, 0, #Container:GetChildren() * 45)
        Holder.BackgroundTransparency = 1
        Holder.Parent = Container

        local Label = Instance.new("TextLabel")
        Label.Size = UDim2.new(1, 0, 0, 20)
        Label.BackgroundTransparency = 1
        Label.TextColor3 = Color3.fromRGB(255, 255, 255)
        Label.Text = text
        Label.Font = Enum.Font.Gotham
        Label.TextSize = 14
        Label.Parent = Holder

        local Bar = Instance.new("Frame")
        Bar.Position = UDim2.new(0, 0, 0, 20)
        Bar.Size = UDim2.new(1, 0, 0, 10)
        Bar.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        Bar.Parent = Holder

        local Fill = Instance.new("Frame")
        -- ✅ FIX 2: safe math handling
        local ratio = 0
        if type(min) == "number" and type(max) == "number" and max > min then
            ratio = ((default or min) - min) / (max - min)
        end
        Fill.Size = UDim2.new(math.clamp(ratio, 0, 1), 0, 1, 0)
        Fill.BackgroundColor3 = Color3.fromRGB(85, 170, 255)
        Fill.Parent = Bar

        local UserInputService = game:GetService("UserInputService")
        local dragging = false

        local function update(input)
            if Bar.AbsoluteSize.X == 0 then return end
            local pos = math.clamp((input.Position.X - Bar.AbsolutePosition.X) / Bar.AbsoluteSize.X, 0, 1)
            Fill.Size = UDim2.new(pos, 0, 1, 0)
            local val = math.floor(min + (max - min) * pos)
            if callback then pcall(callback, val) end
        end

        Bar.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                dragging = true
                update(input)
            end
        end)

        Bar.InputEnded:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                dragging = false
            end
        end)

        UserInputService.InputChanged:Connect(function(input)
            if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                update(input)
            end
        end)
    end

    function Library:AddList(options)
        local Drop = Instance.new("TextButton")
        Drop.Size = UDim2.new(1, -10, 0, 30)
        Drop.Position = UDim2.new(0, 5, 0, #Container:GetChildren() * 35)
        Drop.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        Drop.TextColor3 = Color3.fromRGB(255, 255, 255)
        Drop.Text = options.text or "List"
        Drop.Font = Enum.Font.Gotham
        Drop.TextSize = 16
        Drop.Parent = Container

        Drop.MouseButton1Click:Connect(function()
            if options.values then
                for _, val in ipairs(options.values) do
                    print("Selected:", val)
                end
            end
        end)
    end

    return Library
end

return Library
