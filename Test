--// ModernMiniUI Library (Mobile Friendly)
local ModernMiniUI = {}
local TweenService = game:GetService("TweenService")
local UIS = game:GetService("UserInputService")
local Players = game:GetService("Players")

function ModernMiniUI:CreateWindow(title)
	local ScreenGui = Instance.new("ScreenGui")
	ScreenGui.Name = "ModernMiniUI"
	ScreenGui.ResetOnSpawn = false
	ScreenGui.IgnoreGuiInset = true
	ScreenGui.Parent = game:GetService("CoreGui")

	local Main = Instance.new("Frame")
	Main.Size = UDim2.new(0, 260, 0, 40)
	Main.Position = UDim2.new(0.5, -130, 0.4, 0)
	Main.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
	Main.Active = true
	Main.Parent = ScreenGui
	Instance.new("UICorner", Main).CornerRadius = UDim.new(0, 10)

	local Title = Instance.new("TextLabel")
	Title.Text = title or "Modern UI"
	Title.Font = Enum.Font.GothamBold
	Title.TextSize = 16
	Title.TextColor3 = Color3.fromRGB(255, 255, 255)
	Title.BackgroundTransparency = 1
	Title.Size = UDim2.new(1, 0, 1, 0)
	Title.Parent = Main

	local Content = Instance.new("ScrollingFrame")
	Content.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	Content.Size = UDim2.new(1, 0, 0, 0)
	Content.Position = UDim2.new(0, 0, 1, 0)
	Content.ClipsDescendants = true
	Content.ScrollBarThickness = 3
	Content.CanvasSize = UDim2.new(0, 0, 0, 0)
	Content.Parent = Main
	Instance.new("UICorner", Content).CornerRadius = UDim.new(0, 10)

	local Layout = Instance.new("UIListLayout", Content)
	Layout.Padding = UDim.new(0, 6)
	Layout.FillDirection = Enum.FillDirection.Vertical
	Layout.SortOrder = Enum.SortOrder.LayoutOrder
	Layout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
		Content.CanvasSize = UDim2.new(0, 0, 0, Layout.AbsoluteContentSize.Y + 10)
	end)

	local open = false
	Title.InputBegan:Connect(function(i)
		if i.UserInputType == Enum.UserInputType.MouseButton1 or i.UserInputType == Enum.UserInputType.Touch then
			open = not open
			local goal = open and UDim2.new(1, 0, 0, math.min(Layout.AbsoluteContentSize.Y + 10, 250)) or UDim2.new(1, 0, 0, 0)
			TweenService:Create(Content, TweenInfo.new(0.25), {Size = goal}):Play()
		end
	end)

	-- Dragging (works for touch and mouse)
	local dragging, dragStart, startPos
	Main.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = Main.Position
		end
	end)
	UIS.InputChanged:Connect(function(input)
		if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
			local delta = input.Position - dragStart
			Main.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		end
	end)
	UIS.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = false
		end
	end)

	local folder = {}

	-- ELEMENTS
	function folder:AddButton(opt)
		local btn = Instance.new("TextButton")
		btn.Text = opt.text or "Button"
		btn.Size = UDim2.new(1, -10, 0, 35)
		btn.Position = UDim2.new(0, 5, 0, 0)
		btn.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
		btn.TextColor3 = Color3.fromRGB(255, 255, 255)
		btn.Font = Enum.Font.Gotham
		btn.TextSize = 15
		btn.Parent = Content
		Instance.new("UICorner", btn)
		btn.MouseButton1Click:Connect(function() if opt.callback then pcall(opt.callback) end end)
		return btn
	end

	function folder:AddToggle(opt)
		local tog = Instance.new("TextButton")
		tog.Text = (opt.text or "Toggle") .. ": OFF"
		tog.Size = UDim2.new(1, -10, 0, 35)
		tog.Position = UDim2.new(0, 5, 0, 0)
		tog.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
		tog.TextColor3 = Color3.fromRGB(255, 255, 255)
		tog.Font = Enum.Font.Gotham
		tog.TextSize = 15
		tog.Parent = Content
		Instance.new("UICorner", tog)

		local state = false
		function tog:Set(v)
			state = v
			tog.Text = (opt.text or "Toggle") .. ": " .. (state and "ON" or "OFF")
			if opt.callback then pcall(opt.callback, state) end
		end
		tog.MouseButton1Click:Connect(function() tog:Set(not state) end)
		return tog
	end

	function folder:AddDropdown(opt)
		local drop = Instance.new("TextButton")
		drop.Text = opt.text or "Dropdown"
		drop.Size = UDim2.new(1, -10, 0, 35)
		drop.Position = UDim2.new(0, 5, 0, 0)
		drop.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
		drop.TextColor3 = Color3.fromRGB(255, 255, 255)
		drop.Font = Enum.Font.Gotham
		drop.TextSize = 15
		drop.Parent = Content
		Instance.new("UICorner", drop)

		local values = opt.values or {}
		local selected = values[1] or "None"

		function drop:Set(v)
			selected = v
			drop.Text = (opt.text or "Dropdown") .. ": " .. tostring(v)
			if opt.callback then pcall(opt.callback, v) end
		end
		function drop:Refresh(newValues)
			values = newValues
			if not table.find(values, selected) then drop:Set(values[1] or "None") end
		end
		drop.MouseButton1Click:Connect(function()
			local idx = table.find(values, selected) or 0
			idx = idx + 1
			if idx > #values then idx = 1 end
			drop:Set(values[idx])
		end)
		return drop
	end

	return folder
end

return ModernMiniUI
