-- Tora-Style Custom UI Library (with Set & Refresh)
-- Made for Mobile + PC

local Library = {}

-- Create main window
function Library:CreateWindow(title)
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "ToraCustomUI"
    ScreenGui.Parent = game:GetService("CoreGui")

    local Main = Instance.new("Frame")
    Main.Size = UDim2.new(0, 420, 0, 280)
    Main.Position = UDim2.new(0.5, -210, 0.5, -140)
    Main.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    Main.BorderSizePixel = 0
    Main.Active = true
    Main.Draggable = true
    Main.Parent = ScreenGui

    local Title = Instance.new("TextLabel")
    Title.Size = UDim2.new(1, 0, 0, 35)
    Title.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    Title.Text = title or "Tora Custom UI"
    Title.TextColor3 = Color3.fromRGB(255, 255, 255)
    Title.Font = Enum.Font.GothamBold
    Title.TextSize = 18
    Title.Parent = Main

    local Content = Instance.new("Frame")
    Content.Size = UDim2.new(1, 0, 1, -35)
    Content.Position = UDim2.new(0, 0, 0, 35)
    Content.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    Content.Parent = Main

    local UIListLayout = Instance.new("UIListLayout")
    UIListLayout.Padding = UDim.new(0, 6)
    UIListLayout.Parent = Content

    local Folder = {}

    -- Add a button
    function Folder:AddButton(text, callback)
        local Button = Instance.new("TextButton")
        Button.Size = UDim2.new(1, -12, 0, 30)
        Button.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
        Button.Text = text
        Button.Font = Enum.Font.Gotham
        Button.TextColor3 = Color3.fromRGB(255, 255, 255)
        Button.TextSize = 15
        Button.Parent = Content

        Button.MouseButton1Click:Connect(function()
            if callback then callback() end
        end)
    end

    -- Add a toggle
    function Folder:AddToggle(text, callback)
        local Toggle = Instance.new("TextButton")
        Toggle.Size = UDim2.new(1, -12, 0, 30)
        Toggle.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
        Toggle.Text = text .. ": OFF"
        Toggle.Font = Enum.Font.Gotham
        Toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
        Toggle.TextSize = 15
        Toggle.Parent = Content

        local state = false
        Toggle.MouseButton1Click:Connect(function()
            state = not state
            Toggle.Text = text .. ": " .. (state and "ON" or "OFF")
            if callback then callback(state) end
        end)
    end

    -- Add a dropdown (with Set & Refresh)
    function Folder:AddDropdown(text, options, callback)
        local Frame = Instance.new("Frame")
        Frame.Size = UDim2.new(1, -12, 0, 60)
        Frame.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
        Frame.Parent = Content

        local Label = Instance.new("TextLabel")
        Label.Size = UDim2.new(1, 0, 0, 25)
        Label.BackgroundTransparency = 1
        Label.Text = text
        Label.Font = Enum.Font.Gotham
        Label.TextColor3 = Color3.fromRGB(255, 255, 255)
        Label.TextSize = 15
        Label.Parent = Frame

        local DropDown = Instance.new("TextButton")
        DropDown.Size = UDim2.new(1, -12, 0, 25)
        DropDown.Position = UDim2.new(0, 6, 0, 30)
        DropDown.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
        DropDown.Text = "Select..."
        DropDown.Font = Enum.Font.Gotham
        DropDown.TextColor3 = Color3.fromRGB(255, 255, 255)
        DropDown.TextSize = 14
        DropDown.Parent = Frame

        local currentOptions = options or {}

        local function RefreshDropdown()
            -- (Simple version)
            print("Dropdown refreshed!")
        end

        local function SetDropdown(newOptions)
            currentOptions = newOptions
            print("Dropdown updated:", table.concat(currentOptions, ", "))
            RefreshDropdown()
        end

        DropDown.MouseButton1Click:Connect(function()
            if callback and #currentOptions > 0 then
                callback(currentOptions[math.random(1, #currentOptions)]) -- random demo
            end
        end)

        return {
            Set = SetDropdown,
            Refresh = RefreshDropdown,
        }
    end

    return Folder
end

return Library
