-- âœ… Fixed version: circle button toggles UI visibility
local Players = game:GetService("Players")
local CoreGui = game:GetService("CoreGui")
local UserInputService = game:GetService("UserInputService")

local ToraLike = {}
ToraLike.__index = ToraLike

function ToraLike:CreateWindow(title)
	local win = {}
	win.gui = Instance.new("ScreenGui")
	win.gui.Name = "MiniUI"
	win.gui.ResetOnSpawn = false
	win.gui.Parent = CoreGui

	local frame = Instance.new("Frame")
	frame.Size = UDim2.new(0, 220, 0, 270)
	frame.Position = UDim2.new(0, 10, 0, 10)
	frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
	frame.BorderSizePixel = 0
	frame.Parent = win.gui

	local corner = Instance.new("UICorner")
	corner.CornerRadius = UDim.new(0, 8)
	corner.Parent = frame

	local titleLabel = Instance.new("TextLabel")
	titleLabel.Size = UDim2.new(1, 0, 0, 26)
	titleLabel.Text = title
	titleLabel.Font = Enum.Font.GothamBold
	titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	titleLabel.TextSize = 16
	titleLabel.BackgroundTransparency = 1
	titleLabel.Parent = frame

	local tabHolder = Instance.new("Frame")
	tabHolder.Size = UDim2.new(1, 0, 0, 28)
	tabHolder.Position = UDim2.new(0, 0, 0, 26)
	tabHolder.BackgroundTransparency = 1
	tabHolder.Parent = frame

	local scrollingFrame = Instance.new("ScrollingFrame")
	scrollingFrame.Size = UDim2.new(1, -8, 1, -54)
	scrollingFrame.Position = UDim2.new(0, 4, 0, 54)
	scrollingFrame.BackgroundTransparency = 1
	scrollingFrame.ScrollBarThickness = 5
	scrollingFrame.Parent = frame

	local layout = Instance.new("UIListLayout")
	layout.Padding = UDim.new(0, 5)
	layout.Parent = scrollingFrame

	local folders = {}
	local currentFolder = nil

	function win:AddFolder(name)
		local folderBtn = Instance.new("TextButton")
		folderBtn.Size = UDim2.new(0.5, -4, 1, 0)
		folderBtn.Text = name
		folderBtn.Font = Enum.Font.Gotham
		folderBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
		folderBtn.TextSize = 13
		folderBtn.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
		folderBtn.AutoButtonColor = false
		folderBtn.Parent = tabHolder

		local folderFrame = Instance.new("Frame")
		folderFrame.Size = UDim2.new(1, 0, 1, 0)
		folderFrame.Visible = false
		folderFrame.BackgroundTransparency = 1
		folderFrame.Parent = scrollingFrame

		local folderLayout = Instance.new("UIListLayout")
		folderLayout.Padding = UDim.new(0, 5)
		folderLayout.Parent = folderFrame

		local api = {}

		function api:AddLabel(opts)
			local lbl = Instance.new("TextLabel")
			lbl.Size = UDim2.new(1, -10, 0, 20)
			lbl.Text = opts.text or "Label"
			lbl.Font = Enum.Font.Gotham
			lbl.TextColor3 = Color3.fromRGB(255, 255, 255)
			lbl.TextSize = 13
			lbl.BackgroundTransparency = 1
			lbl.Parent = folderFrame
		end

		function api:AddButton(opts)
			local btn = Instance.new("TextButton")
			btn.Size = UDim2.new(1, -10, 0, 24)
			btn.Text = opts.text or "Button"
			btn.Font = Enum.Font.Gotham
			btn.TextColor3 = Color3.fromRGB(255, 255, 255)
			btn.TextSize = 13
			btn.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
			btn.Parent = folderFrame
			btn.MouseButton1Click:Connect(opts.callback or function() end)
		end

		function api:AddTextBox(opts)
			local box = Instance.new("TextBox")
			box.Size = UDim2.new(1, -10, 0, 24)
			box.PlaceholderText = opts.placeholder or "Enter text..."
			box.Font = Enum.Font.Gotham
			box.TextColor3 = Color3.fromRGB(255, 255, 255)
			box.TextSize = 13
			box.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
			box.Parent = folderFrame
			box.FocusLost:Connect(function()
				if opts.callback then opts.callback(box.Text) end
			end)
		end

		function api:AddToggle(opts)
			local btn = Instance.new("TextButton")
			btn.Size = UDim2.new(1, -10, 0, 24)
			btn.Text = opts.text or "Toggle"
			btn.Font = Enum.Font.Gotham
			btn.TextColor3 = Color3.fromRGB(255, 255, 255)
			btn.TextSize = 13
			btn.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
			btn.Parent = folderFrame

			local on = false
			btn.MouseButton1Click:Connect(function()
				on = not on
				btn.BackgroundColor3 = on and Color3.fromRGB(70, 100, 255) or Color3.fromRGB(40, 40, 40)
				if opts.callback then opts.callback(on) end
			end)
		end

		function api:AddList(opts)
			local dropdown = Instance.new("Frame")
			dropdown.Size = UDim2.new(1, -10, 0, 24)
			dropdown.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
			dropdown.Parent = folderFrame

			local label = Instance.new("TextLabel")
			label.Size = UDim2.new(1, -10, 1, 0)
			label.Position = UDim2.new(0, 5, 0, 0)
			label.Text = opts.text or "Dropdown"
			label.Font = Enum.Font.Gotham
			label.TextSize = 13
			label.TextColor3 = Color3.fromRGB(255, 255, 255)
			label.BackgroundTransparency = 1
			label.Parent = dropdown

			local btn = Instance.new("TextButton")
			btn.Size = UDim2.new(1, 0, 1, 0)
			btn.BackgroundTransparency = 1
			btn.Text = ""
			btn.Parent = dropdown

			local open = false
			local listFrame = Instance.new("Frame")
			listFrame.Size = UDim2.new(1, -10, 0, 0)
			listFrame.Position = UDim2.new(0, 5, 1, 0)
			listFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
			listFrame.Visible = false
			listFrame.Parent = folderFrame

			local listLayout = Instance.new("UIListLayout")
			listLayout.Parent = listFrame

			for _, val in ipairs(opts.values or {}) do
				local item = Instance.new("TextButton")
				item.Size = UDim2.new(1, 0, 0, 20)
				item.Text = val
				item.Font = Enum.Font.Gotham
				item.TextColor3 = Color3.fromRGB(255, 255, 255)
				item.TextSize = 13
				item.BackgroundTransparency = 1
				item.Parent = listFrame
				item.MouseButton1Click:Connect(function()
					listFrame.Visible = false
					open = false
					label.Text = val
					if opts.callback then opts.callback(val) end
				end)
			end

			btn.MouseButton1Click:Connect(function()
				open = not open
				listFrame.Visible = open
				listFrame.Size = UDim2.new(1, -10, 0, #opts.values * 20)
			end)
		end

		folderBtn.MouseButton1Click:Connect(function()
			for _, f in pairs(folders) do f.Visible = false end
			folderFrame.Visible = true
			currentFolder = folderFrame
		end)

		folders[name] = folderFrame
		if not currentFolder then
			folderFrame.Visible = true
			currentFolder = folderFrame
		end

		return api
	end

	-- Draggable main UI
	local dragging, dragStart, startPos
	frame.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = true
			dragStart = input.Position
			startPos = frame.Position
		end
	end)
	UserInputService.InputChanged:Connect(function(input)
		if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
			local delta = input.Position - dragStart
			frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		end
	end)
	UserInputService.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = false
		end
	end)

	-- Circle Toggle Button
	local toggleBtn = Instance.new("ImageButton")
	toggleBtn.Size = UDim2.new(0, 40, 0, 40)
	toggleBtn.Position = UDim2.new(1, -50, 0, 10)
	toggleBtn.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	toggleBtn.Image = ""
	toggleBtn.Parent = win.gui

	local toggleCorner = Instance.new("UICorner")
	toggleCorner.CornerRadius = UDim.new(1, 0)
	toggleCorner.Parent = toggleBtn

	local uiVisible = true
	toggleBtn.MouseButton1Click:Connect(function()
		uiVisible = not uiVisible
		frame.Visible = uiVisible
	end)

	return win
end
